# Stop on any error
$ErrorActionPreference = "Stop"

# Ask for main branch name
$mainBranch = Read-Host "Enter the main branch to merge into (e.g., develop)"
$featureBranch = git rev-parse --abbrev-ref HEAD

Write-Host "Current feature branch: $featureBranch"
Write-Host "Target main branch: $mainBranch"

# Fetch latest changes and switch to main branch
git fetch origin
git checkout $mainBranch
git pull origin $mainBranch

# Attempt fast-forward merge
Write-Host "Attempting fast-forward merge of $featureBranch into $mainBranch..."
$mergeResult = git merge --ff-only $featureBranch 2>&1

if ($LASTEXITCODE -eq 0) {
    Write-Host "✅ Fast-forward merge successful."

    # Run Gradle build
    Write-Host "🔨 Running Gradle build..."
    & ./gradlew build

    if ($LASTEXITCODE -eq 0) {
        Write-Host "✅ Build successful."

        # Push to origin
        git push origin $mainBranch

        # Create pull request
        Write-Host "🚀 Creating pull request..."
        gh pr create --base $mainBranch --head $featureBranch `
            --title "Merge $featureBranch into $mainBranch" `
            --body "Automated fast-forward merge and successful Gradle build."

        Write-Host "✅ Pull request created successfully."
    }
    else {
        Write-Host "❌ Build failed after merge. Please check build output."
        exit 1
    }
}
else {
    Write-Host "❌ Fast-forward merge not possible (branches have diverged). Aborting."
    exit 1
}
