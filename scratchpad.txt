import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

# Load the Excel data (Excel will pass the table to the Python script)
data = pd.DataFrame(CurrentWorkbook["IrisData"])

# Specify feature and target columns
feature_columns = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']
target_column = 'species'  # The target column with labels like 'setosa', 'versicolor', 'virginica'

# Split features and target
X = data[feature_columns]
y = data[target_column]

# Standardize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

# Multi-class classification using RandomForestClassifier
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
report = classification_report(y_test, y_pred, output_dict=True)

# Create a dataframe for the classification report
report_df = pd.DataFrame(report).transpose()

# Output the report back to Excel
CurrentWorkbook["ClassificationReport"] = report_df

# Visualization: Scatter plot for the species
plt.figure(figsize=(10, 6))

# Assign colors for each species
colors = {'setosa': 'red', 'versicolor': 'blue', 'virginica': 'green'}

# Scatter plot using the first two features
for species in y.unique():
    plt.scatter(
        X_test[y_test == species][:, 0],  # Sepal length
        X_test[y_test == species][:, 1],  # Sepal width
        c=colors[species],
        label=species,
        alpha=0.6,
    )

# Customize plot
plt.title("Scatter Plot of Multi-Class Classification")
plt.xlabel("Sepal Length (standardized)")
plt.ylabel("Sepal Width (standardized)")
plt.legend(title="Species")
plt.grid(True)
plt.tight_layout()

# Show the plot
plt.show()