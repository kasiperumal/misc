graph TD
    A[Customer] -->|Start Car Savings Goal| B[Goal Management System]
    B -->|Set Target Savings: $40,000<br>Opening Balance: $8,500<br>Timeframe: 6 Months| C[Expense Tracking System]
    C -->|Identify Essential Expenses<br>Example: Rent $1,500, Groceries $600| D[Expense Tracking System]
    
    D -->|Request: Analyze my recent expenses, categorize non-essential ones, and provide reasons.<br>Example: Rent $1,500, Coffee $50, Groceries $600, Entertainment $200| F[GenAI Engine]
    F -->|Response: Categorized expenses and reasons.Example: Non-Essential - Coffee $50 Reason: Can be reduced by making coffee at home| D

    D -->|Request: Predict the savings needed, investment required, and expense cuts to achieve my goal of $40,000 in 6 months.<br>Starting balance: $8,500| H[GenAI Engine]
    H -->|Response: Savings needed $7,500 per month, Non-Essential Cuts: Entertainment $200| D
    
    D -->|Track Progress and Adjust Plan<br>Example: Monitor savings and adjust monthly plan| B
    B -->|Achieve $40,000 Savings Goal| I[Customer]
    I -->|Purchase Car| J[Car Purchase]


graph TD
    subgraph Training GenAI
        K[Training Data: Historical Expense Data<br>Example: Rent $1500, Groceries $600, Entertainment $200]
        L[Training Data: Categorization Rules<br>Example: Rent is essential, Coffee is non-essential]
        M[Training Data: Savings and Investment Patterns<br>Example: Save $500/month, Invest $200/month]
        N[GenAI]
        O[Validation Data: Recent Expense Data<br>Example: Rent $1600, Groceries $550, Dining Out $150]
        R[Validation Output: Accuracy Report<br>Example: Correctly categorized 95% of expenses, Predicted savings within 5% of actual]

        K --> N
        L --> N
        M --> N
        N --> O
        O --> R
    end



graph TD
    Customer -->|1. buys fruits & vegetables, beauty products from Walmart| BillingSoftware
    BillingSoftware -->|2. invoice generated with items purchased| InvoiceService
    BillingSoftware -->|3. forwards payment details: merchant category: grocery, item categories: fruits & vegetables, beauty products, amount: $199| PointOfSale
    PointOfSale -->|4. payment request| PaymentService
    PaymentService -->|5. confirms payment| PointOfSale
    PointOfSale -->|6. confirms payment| BillingSoftware
    PaymentService -->|7. publish payment confirmation event to message broker| MessageBroker
    MessageBroker -->|8. consumes payment confirmation event| EmojiService
    EmojiService -->|9. generate prompt: Assign an emoji that best represents a transaction for fruits & vegetables, beauty products items purchased from an GROCERY merchant| GenAI
    GenAI -->|10. returns emojis: 🍎🥦💄| EmojiService
    EmojiService -->|11. stores emojis: 🍎🥦💄 for given transaction| TransactionDataStore
    Customer -->|12. requests account statement| AccountStatementService
    AccountStatementService -->|13. retrieves data| TransactionDataStore
    AccountStatementService -->|14. returns statement with emojis: 🍎🥦💄| Customer

sequenceDiagram
    participant Customer
    participant BillingSoftware
    participant InvoiceService
    participant PointOfSale
    participant PaymentService
    participant MessageBroker
    participant EmojiService
    participant GenAI
    participant TransactionDataStore
    participant AccountStatementService
    
    Customer ->> BillingSoftware: 1. buys fruits & vegetables, beauty products from Walmart
    BillingSoftware ->> InvoiceService: 2. invoice generated with items purchased
    BillingSoftware ->> PointOfSale: 3. forwards payment details: merchant category: grocery, item categories: [fruits & vegetables, beauty products], amount: $199
    PointOfSale ->> PaymentService: 4. payment request
    PaymentService ->> PointOfSale: 5. confirms payment
    PointOfSale ->> BillingSoftware: 6. confirms payment
    PaymentService ->> MessageBroker: 7. publish payment confirmation event
    MessageBroker ->> EmojiService: 8. consumes payment confirmation event
    EmojiService ->> GenAI: 9. generate prompt: "Assign an emoji that best represents a transaction for [fruits & vegetables, beauty products] items purchased from an GROCERY merchant"
    GenAI ->> EmojiService: 10. returns emojis: 🍎🥦💄
    EmojiService ->> TransactionDataStore: 11. stores emojis: 🍎🥦💄 for given transaction
    Customer ->> AccountStatementService: 12. requests account statement
    AccountStatementService ->> TransactionDataStore: 13. retrieves data
    AccountStatementService ->> Customer: 14. returns statement with emojis: 🍎🥦💄


Training process:

graph TD
    A[Start Training] --> B[Collect and Label Data like Transaction, Emoji etc.]
    B --> C[Preprocess Data like format, cleanup etc.]
    C --> E[Fine-tune LLAMA2 GenAI Model]
    E --> F[Validate Model like Loss, Accuracy etc.]
    F --> G{Performance Satisfactory?}
    G -->|No| H[Adjust model weights and Retrain]
    G -->|Yes| I[Deploy LLAMA2 Model]
