pipeline {
    agent any
    parameters {
        string(name: 'REPO_NAME', defaultValue: 'kasiperumal/misc', description: 'GitHub repo in format user/repo')
        string(name: 'MAIN_BRANCH', defaultValue: 'develop', description: 'Target main branch')
        string(name: 'FEATURE_BRANCH', defaultValue: 'develop-1', description: 'Source feature branch')
    }

    environment {
        GITHUB_API = "https://api.github.com"
        GITHUB_TOKEN = credentials('GITHUB_TOKEN') // Injects GitHub token from Jenkins credentials
    }

    stages {
        stage('Clone Repo') {
            steps {
                sh """
                rm -rf repo && mkdir repo
                cd repo
                git clone https://github.com/${params.REPO_NAME}.git .
                git config user.name "jenkins-bot"
                git config user.email "jenkins@example.com"
                """
            }
        }

        stage('Merge & Build') {
            steps {
                dir('repo') {
                    script {
                        sh """
                        git checkout ${params.FEATURE_BRANCH}
                        git pull origin ${params.FEATURE_BRANCH}

                        git checkout ${params.MAIN_BRANCH}
                        git pull origin ${params.MAIN_BRANCH}

                        echo "Attempting fast-forward merge..."
                        git merge --ff-only ${params.FEATURE_BRANCH}
                        """

                        sh './gradlew build'
                    }
                }
            }
        }

        stage('Push & Raise PR') {
            steps {
                dir('repo') {
                    script {
                        sh """
                        git push origin ${params.MAIN_BRANCH}
                        """

                        def prTitle = "Merge ${params.FEATURE_BRANCH} into ${params.MAIN_BRANCH}"
                        def prBody = "Automated PR created by Jenkins pipeline."
                        def prData = """{
                          "title": "${prTitle}",
                          "head": "${params.MAIN_BRANCH}",
                          "base": "${params.FEATURE_BRANCH}",
                          "body": "${prBody}"
                        }"""

                        writeFile file: 'pr_payload.json', text: prData

                        sh """
                        curl -X POST -H "Authorization: token ${env.GITHUB_TOKEN}" \
                          -H "Accept: application/vnd.github.v3+json" \
                          ${env.GITHUB_API}/repos/${params.REPO_NAME}/pulls \
                          -d @pr_payload.json
                        """
                    }
                }
            }
        }
    }
}

Jenkins Setup: GitHub Token
Go to: Jenkins → Manage Jenkins → Credentials → Global

Add a "Secret Text" credential:

ID: GITHUB_TOKEN

Secret: Your GitHub Personal Access Token (with repo scope)
